/**
 * M√≥dulo para gestionar categor√≠as y subcategor√≠as
 * Fecha de creaci√≥n: 2025-03-13 15:38:02
 * Autor: pablofarias19
 */
const CategoriasModule = (function() {
    // Diccionario de subcategor√≠as con emojis
    const subcategorias = {
        "alimentos": [
            {valor: "frutas_verduras", nombre: "üçé Frutas y verduras"},
            {valor: "carnes", nombre: "ü•© Carnes"},
            {valor: "lacteos", nombre: "üßÄ L√°cteos"},
            {valor: "panaderia", nombre: "üçû Panader√≠a"},
            {valor: "comida_preparada", nombre: "üç≤ Comida preparada"},
            {valor: "bebidas", nombre: "ü•§ Bebidas"},
            {valor: "otros_alimentos", nombre: "ü•´ Otros alimentos"}
        ],
        "ropa": [
            {valor: "ropa_hombre", nombre: "üëî Ropa de hombre"},
            {valor: "ropa_mujer", nombre: "üëó Ropa de mujer"},
            {valor: "ropa_infantil", nombre: "üë∂ Ropa infantil"},
            {valor: "accesorios", nombre: "üëú Accesorios y complementos"}
        ],
        "calzado": [
            {valor: "zapatos_hombre", nombre: "üëû Zapatos de hombre"},
            {valor: "zapatos_mujer", nombre: "üë† Zapatos de mujer"},
            {valor: "zapatos_infantil", nombre: "üëü Calzado infantil"},
            {valor: "calzado_deportivo", nombre: "üèÉ Calzado deportivo"}
        ],
        "juguetes": [
            {valor: "juguetes_bebes", nombre: "üë∂ Juguetes para beb√©s"},
            {valor: "juguetes_ninos", nombre: "üßí Juguetes para ni√±os"},
            {valor: "juegos_mesa", nombre: "üé≤ Juegos de mesa"},
            {valor: "juguetes_educativos", nombre: "üéì Juguetes educativos"}
        ],
        "libros": [
            {valor: "libros_ficcion", nombre: "üìï Ficci√≥n"},
            {valor: "libros_infantiles", nombre: "üìö Literatura infantil"},
            {valor: "libros_educativos", nombre: "üìò Educativos"},
            {valor: "comics_manga", nombre: "üìî C√≥mics y manga"},
            {valor: "libros_historia", nombre: "üìú Historia"},
            {valor: "libros_ciencia", nombre: "üî¨ Ciencia"},
            {valor: "libros_arte", nombre: "üé® Arte"}
        ],
        "electronica": [
            {valor: "smartphones", nombre: "üì± Smartphones"},
            {valor: "tablets_ordenadores", nombre: "üíª Tablets y ordenadores"},
            {valor: "audio_video", nombre: "üéß Audio y v√≠deo"},
            {valor: "electrodomesticos", nombre: "üîå Electrodom√©sticos"},
            {valor: "fotografia", nombre: "üì∑ Fotograf√≠a"},
            {valor: "gaming", nombre: "üéÆ Gaming"}
        ],
        "hogar": [
            {valor: "muebles", nombre: "üõãÔ∏è Muebles"},
            {valor: "decoracion", nombre: "üè∫ Decoraci√≥n"},
            {valor: "jardineria", nombre: "üå± Jardiner√≠a"},
            {valor: "utensilios_cocina", nombre: "üç≥ Utensilios de cocina"},
            {valor: "iluminacion", nombre: "üí° Iluminaci√≥n"},
            {valor: "textiles", nombre: "üõèÔ∏è Textiles"}
        ],
        "servicios": [
            {valor: "reparaciones", nombre: "üîß Reparaciones"},
            {valor: "limpieza", nombre: "üßπ Limpieza"},
            {valor: "clases_particulares", nombre: "üìù Clases particulares"},
            {valor: "servicios_profesionales", nombre: "üíº Servicios profesionales"},
            {valor: "jardinero", nombre: "üåø Jardinero"},
            {valor: "carpintero", nombre: "üî® Carpintero"},
            {valor: "albanil", nombre: "üß± Alba√±il"},
            {valor: "plomero", nombre: "üö∞ Plomero"},
            {valor: "pintor_casas", nombre: "üé® Pintor de casas"},
            {valor: "cuidador_casas", nombre: "üè† Cuidador de casas"},
            {valor: "otros_servicios", nombre: "üîß Otros servicios"}
        ],
        "vehiculos": [
            {valor: "coches", nombre: "üöó Coches"},
            {valor: "motos", nombre: "üèçÔ∏è Motos"},
            {valor: "bicicletas", nombre: "üö≤ Bicicletas"},
            {valor: "accesorios_vehiculos", nombre: "üîå Accesorios para veh√≠culos"},
            {valor: "camiones", nombre: "üöõ Camiones"},
            {valor: "barcos", nombre: "‚õµ Barcos"}
        ],
        "inmuebles": [
            {valor: "venta_casas", nombre: "üè† Venta de casas"},
            {valor: "venta_departamentos", nombre: "üè¢ Venta de departamentos"},
            {valor: "alquiler_casas", nombre: "üè° Alquiler de casas"},
            {valor: "alquiler_departamentos", nombre: "üè¨ Alquiler de departamentos"},
            {valor: "oficinas", nombre: "üè¢ Oficinas"},
            {valor: "locales_comerciales", nombre: "üè™ Locales comerciales"}
        ],
        "trabajo": [
            {valor: "ofertas_empleo", nombre: "üíº Ofertas de empleo"},
            {valor: "busqueda_empleo", nombre: "üîç B√∫squeda de empleo"},
            {valor: "servicios_freelance", nombre: "üë®‚Äçüíª Servicios freelance"},
            {valor: "trabajo_temporal", nombre: "‚è±Ô∏è Trabajo temporal"},
            {valor: "practicas", nombre: "üìö Pr√°cticas"},
            {valor: "voluntariado", nombre: "ü§ù Voluntariado"}
        ],
        "otros": [
            {valor: "articulos_coleccion", nombre: "üèÜ Art√≠culos de colecci√≥n"},
            {valor: "mascotas", nombre: "üê∂ Mascotas"},
            {valor: "deportes", nombre: "‚öΩ Deportes"},
            {valor: "instrumentos_musicales", nombre: "üé∏ Instrumentos musicales"},
            {valor: "juegos_juguetes", nombre: "üß∏ Juegos y juguetes"},
            {valor: "otros_general", nombre: "üì¶ Otros"}
        ]
    };
    
    /**
     * Inicializa el m√≥dulo de categor√≠as
     */
    function init() {
        // A√±adir listener para actualizar subcategor√≠as cuando cambia la categor√≠a
        document.getElementById('categoria').addEventListener('change', actualizarSubcategorias);
        
        // A√±adir listener para subcategor√≠a
        document.getElementById('subcategoria').addEventListener('change', function() {
            if (this.selectedIndex > -1) {
                const selectedOption = this.options[this.selectedIndex];
                const subEmoji = selectedOption.getAttribute('data-emoji');
                if (subEmoji) {
                    document.getElementById('emoji-preview').textContent = subEmoji;
                    document.getElementById('emoji').value = subEmoji;
                }
            }
        });
    }
    
    /**
     * Actualiza las subcategor√≠as seg√∫n la categor√≠a seleccionada
     */
    function actualizarSubcategorias() {
        const categoriaSelect = document.getElementById('categoria');
        const subcategoriaSelect = document.getElementById('subcategoria');
        const emoji = categoriaSelect.options[categoriaSelect.selectedIndex]
                                         .getAttribute('data-emoji') || '';
        const categoria = categoriaSelect.value;
        
        // Limpiar subcategor√≠as anteriores
        subcategoriaSelect.innerHTML = '';
        
        // Mostrar el emoji en el preview
        document.getElementById('emoji-preview').textContent = emoji;
        document.getElementById('emoji').value = emoji;
        
        // Si no hay categor√≠a seleccionada, restablecemos la opci√≥n por defecto
        if (!categoria) {
            subcategoriaSelect.innerHTML = 
                '<option value="">Primero seleccione una categor√≠a</option>';
            return;
        }
        
        // Rellenar las subcategor√≠as
        if (subcategorias[categoria]) {
            subcategorias[categoria].forEach(function(subcat) {
                const option = document.createElement('option');
                option.value = subcat.valor;
                option.textContent = subcat.nombre;
                
                // Extraer el emoji de la subcategor√≠a y agregarlo como atributo
                const subEmoji = subcat.nombre.split(' ')[0]; // Obtiene el emoji del nombre
                option.setAttribute('data-emoji', subEmoji);
                
                subcategoriaSelect.appendChild(option);
            });
        }
    }
    
    // API p√∫blica
    return {
        init,
        actualizarSubcategorias
    };
})();